[{"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/mainComponent.js":"7","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"8","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"9","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"12","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"13","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"14","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"17","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"18","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"19","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"20","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/reducer.js":"21"},{"size":696,"mtime":1615659369648,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1614657414774,"results":"24","hashOfConfig":"23"},{"size":574,"mtime":1616394378186,"results":"25","hashOfConfig":"23"},{"size":1396,"mtime":1615832180233,"results":"26","hashOfConfig":"23"},{"size":1242,"mtime":1615777285923,"results":"27","hashOfConfig":"23"},{"size":5597,"mtime":1616440627931,"results":"28","hashOfConfig":"23"},{"size":2008,"mtime":1616395554746,"results":"29","hashOfConfig":"23"},{"size":1915,"mtime":1615774076463,"results":"30","hashOfConfig":"23"},{"size":5183,"mtime":1616386597087,"results":"31","hashOfConfig":"23"},{"size":946,"mtime":1615787024388,"results":"32","hashOfConfig":"23"},{"size":10978,"mtime":1616437507336,"results":"33","hashOfConfig":"23"},{"size":1054,"mtime":1615777317688,"results":"34","hashOfConfig":"23"},{"size":303,"mtime":1615777337931,"results":"35","hashOfConfig":"23"},{"size":4243,"mtime":1615777208977,"results":"36","hashOfConfig":"23"},{"size":4091,"mtime":1616090592499,"results":"37","hashOfConfig":"23"},{"size":482,"mtime":1616721744059,"results":"38","hashOfConfig":"23"},{"size":182,"mtime":1616721642337,"results":"39","hashOfConfig":"23"},{"size":182,"mtime":1616721630117,"results":"40","hashOfConfig":"23"},{"size":190,"mtime":1616721658881,"results":"41","hashOfConfig":"23"},{"size":186,"mtime":1616721604329,"results":"42","hashOfConfig":"23"},{"size":410,"mtime":1616393810000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1bokqan",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["90","91"],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["92","93","94"],"import React, { Component }from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {  LocalForm, Control, Errors} from 'react-redux-form'\n\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\n\n\nfunction RenderCampsite({campsite}){\n    return(\n        <div  className={'col-md-5 m-1'}>\n            <Card>\n                <CardImg top src={campsite.image} alt= {campsite.name} />\n                <CardBody>\n                    <CardText>{campsite.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    )\n}\nfunction RenderComments({comments}){\n    if(comments){\n        return(\n            <div className={'col-md-5 m-1'}> \n                <h4>Comments</h4> \n                {comments.map(comments =>\n                <div key={comments.id}>{comments.text}<br />\n                <p>--{comments.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}</p>\n                </div>)}\n                <CommentForm />\n            </div>\n        )\n    }\n}\n\nclass CommentForm extends Component {\n    constructor(props)  {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    toggleModal(){\n        this.setState({ isModalOpen: !this.state.isModalOpen });\n    }\n\n\n    handleSubmit(values){\n     console.log(\"Current state is: \" + JSON.stringify(values));\n     alert(\"Current state is: \" + JSON.stringify(values));\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Button outline className=\"fa-lg\" onClick={this.toggleModal}>\n                    Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                           <div className='form-group'>\n                               <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" name=\"rating\"\n                                            className=\"form-control\" id=\"rating\">\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                </Control.select>\n                           </div>\n                           <div className='form-group'>\n                               <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" name=\"author\"\n                                            className=\"form-control\" id=\"author\" \n                                            validators={{\n                                                \n                                                minLength: minLength(2),\n                                                maxLength: maxLength(15)\n                                            }}/>\n                                            <Errors \n                                                className=\"text-danger\"\n                                                model=\".author\"\n                                                show=\"touched\"\n                                                component=\"div\"\n                                                messages={{\n                                                    minLength: 'Must be at least 2 characters',\n                                                    maxLength: 'Must be 15 characters or less'\n                                            }}/>\n                               \n                           </div>\n                           <div className='form-group'>\n                               <Label htmlFor=\"text\">Comments</Label>\n                                <Control.textarea rows='6' model=\".text\" name=\"text\"\n                                            className=\"form-control\" id=\"text\">\n                                        \n                                </Control.textarea>\n                           </div>\n                           <Button type=\"submit\">Submit</Button>\n\n                        </LocalForm>\n\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n\n}\nfunction CampsiteInfo(props) {\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                    <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments comments={props.comments} />                \n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\n\n\n\n\nexport default CampsiteInfo","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/mainComponent.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["95","96","97","98","99","100","101"],"import React, { Component }from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form'\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    } \n    \n\n\n\n    handleSubmit(values)\n {\n     console.log(\"Current state is: \" + JSON.stringify(values));\n     alert(\"Current state is: \" + JSON.stringify(values));\n }\n    render() {\n\n\n        \n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                    <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Directory</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                        <div className=\"col-12\">\n                            <h2>Send us your Feedback</h2>\n                            <hr />\n                        </div>\n                        <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n}\n\n\n\nexport default Contact;","/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/josephclark/Desktop/NucampFolder/3-React/nucampsite/src/redux/reducer.js",[],["102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":68,"column":33,"nodeType":"110","endLine":69,"endColumn":82},{"ruleId":"108","severity":1,"message":"111","line":79,"column":33,"nodeType":"110","endLine":85,"endColumn":49},{"ruleId":"108","severity":1,"message":"112","line":99,"column":33,"nodeType":"110","endLine":100,"endColumn":80},{"ruleId":"108","severity":1,"message":"111","line":87,"column":33,"nodeType":"110","endLine":95,"endColumn":39},{"ruleId":"108","severity":1,"message":"111","line":112,"column":37,"nodeType":"110","endLine":120,"endColumn":39},{"ruleId":"108","severity":1,"message":"111","line":137,"column":37,"nodeType":"110","endLine":146,"endColumn":39},{"ruleId":"108","severity":1,"message":"111","line":164,"column":37,"nodeType":"110","endLine":171,"endColumn":39},{"ruleId":"108","severity":1,"message":"113","line":188,"column":45,"nodeType":"110","endLine":192,"endColumn":47},{"ruleId":"108","severity":1,"message":"109","line":198,"column":37,"nodeType":"110","endLine":199,"endColumn":66},{"ruleId":"108","severity":1,"message":"112","line":208,"column":37,"nodeType":"110","endLine":211,"endColumn":39},{"ruleId":"104","replacedBy":"114"},{"ruleId":"106","replacedBy":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["116"],["117"],"no-global-assign","no-unsafe-negation"]